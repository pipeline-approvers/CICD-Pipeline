name: email-send
on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: nu-laptop # this is a self hosted windows server
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Variables for EST Time
      id: step1
      run: |
        echo "Step 1: Setting variables for EST Time"
      continue-on-error: true

    - name: Creating Backup
      id: step2
      run: |
        echo "Step 2: Creating Backup"
      continue-on-error: true

    - name: Copy Code to the server
      id: step3
      run: |
        # Delete git code from the previous deployment
        $folderPath = "C:\Users\madhukar.hanumantha\Desktop\workspace"
          Remove-Item -Path $folderPath\* -Recurse -Force
        # Copy the new git code to the server
        $source = "${{ github.workspace }}\med\MedicaidEligibilityEnquiryTool\"
        $destination = "C:\Users\madhukar.hanumantha\Desktop\workspace\"
        Copy-Item -Path $source\* -Destination $destination -Recurse -Force
      continue-on-error: true

    - name: Stop IIS Service
      id: step4
      run: |
        # Delete build files from previous deployment
        $folderPath = "C:\Users\madhukar.hanumantha\Desktop\release"
        Remove-Item -Path $folderPath\* -Recurse -Force
      continue-on-error: true

    - name: Publish
      id: step5
      run: |
        cd C:\Users\madhukar.hanumantha\Desktop\workspace\
        dotnet publish -c Release -o "C:\Users\madhukar.hanumantha\Desktop\release"
      continue-on-error: true

    - name: Rollback If Publish Fails
      id: step6
      run: |
        echo "Step 6: Rollback If Publish Fails"
      continue-on-error: true

    - name: Start IIS Service
      id: step7
      run: |
        echo "Step 7: Start IIS Service"
      continue-on-error: true

    - name: Run Cleanup Script
      id: step8
      run: |
        echo "Step 8: Run Cleanup Script"
      continue-on-error: true

    - name: Check Deployment Status
      id: check_status
      run: |
        $status = "success"
        if (${{ steps.step1.outcome }} -eq 'failure') { $status = "failed at step 1"; exit 1 }
        if (${{ steps.step2.outcome }} -eq 'failure') { $status = "failed at step 2"; exit 1 }
        if (${{ steps.step3.outcome }} -eq 'failure') { $status = "failed at step 3"; exit 1 }
        if (${{ steps.step4.outcome }} -eq 'failure') { $status = "failed at step 4"; exit 1 }
        if (${{ steps.step5.outcome }} -eq 'failure') { $status = "failed at step 5"; exit 1 }
        if (${{ steps.step6.outcome }} -eq 'failure') { $status = "failed at step 6"; exit 1 }
        if (${{ steps.step7.outcome }} -eq 'failure') { $status = "failed at step 7"; exit 1 }
        if (${{ steps.step8.outcome }} -eq 'failure') { $status = "failed at step 8"; exit 1 }
        echo "Deployment $status"
      continue-on-error: true
      env:
        STEP1_OUTCOME: ${{ steps.step1.outcome }}
        STEP2_OUTCOME: ${{ steps.step2.outcome }}
        STEP3_OUTCOME: ${{ steps.step3.outcome }}
        STEP4_OUTCOME: ${{ steps.step4.outcome }}
        STEP5_OUTCOME: ${{ steps.step5.outcome }}
        STEP6_OUTCOME: ${{ steps.step6.outcome }}
        STEP7_OUTCOME: ${{ steps.step7.outcome }}
        STEP8_OUTCOME: ${{ steps.step8.outcome }}

    - name: Send Email Notification
      uses: dsfx3d/action-aws-ses@v1
      with:
        to: madhukar.h1988@gmail.com
        from: madhukar.h1988@gmail.com
        subject: ${{ github.ref_name }} deployment is ${{ steps.check_status.outcome }}
        body: |
          ${{ steps.check_status.outputs.result }}
